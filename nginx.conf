worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  60;

    access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log debug;

    gzip  on;

    server {
        listen       80;
        listen [::]:80;
        server_name  localhost;

        return 301 https://$host$request_uri;

        location /snake-api/v2/ {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://server:3001;
            proxy_set_header      X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://client:3000;
            proxy_set_header      X-Forwarded-Proto $scheme;
        }

        location /status {
            default_type application/json;
            return 200 '{"status": "ok"}';
        }

#        return 301 https://$host$request_uri;
    }


server {
    listen 443 ssl;
    listen [::]:443;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

        location /snake-api/v2/ {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://server:3001;
            proxy_set_header      X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://client:3000;
            proxy_set_header      X-Forwarded-Proto $scheme;
        }

        location /status {
            default_type application/json;
            return 200 '{"status": "ok"}';
        }
}
}